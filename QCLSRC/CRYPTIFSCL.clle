PGM (&MODE &FROM &TO &DELETE &PASSWORD)

  DCL &MODE TYPE(*CHAR) LEN(1)
  DCL &FROM TYPE(*CHAR) LEN(256)
  DCL &TO TYPE(*CHAR) LEN(256)
  DCL &PASSWORD TYPE(*CHAR) LEN(32)
  DCL &DELETE TYPE(*LGL)
  DCL &CMD TYPE(*CHAR) LEN(512)
  DCL &SUCCESS TYPE(*LGL) VALUE('1')

  COPYRIGHT TEXT('COPYRIGHT (c)2019 BY CHRISTIAN BRUNNER')

  DCLPRCOPT LOG(*NO) ALWRTVSRC(*NO) USRPRF(*USER) AUT(*EXCLUDE) +
             STGMDL(*TERASPACE) DFTACTGRP(*NO) ACTGRP(*NEW)

  IF (&PASSWORD = ' ' *AND (&MODE *EQ '1' *OR &MODE *EQ '2')) THEN(DO)
    SNDPGMMSG MSGID(CPF9897) MSGF(QCPFMSG) +
              MSGDTA('No password available') MSGTYPE(*ESCAPE)
    CHGVAR &SUCCESS '0'
  ENDDO

  IF (&FROM = &TO) THEN(DO)
    SNDPGMMSG MSGID(CPF9897) MSGF(QCPFMSG) +
              MSGDTA('From/to is the same') MSGTYPE(*ESCAPE)
    CHGVAR &SUCCESS '0'
  ENDDO

  IF (&SUCCESS = '1') THEN(DO)
    CHKOUT &FROM
    MONMSG MSGID(CPF0000) EXEC(CHGVAR &SUCCESS '0')
    IF (&SUCCESS = '0') THEN(DO)
      SNDPGMMSG MSGID(CPF9897) MSGF(QCPFMSG) +
                MSGDTA('Sourcefile not available') MSGTYPE(*ESCAPE)
    ENDDO
    CHKIN &FROM
    MONMSG MSGID(CPF0000)
  ENDDO

  IF (&SUCCESS = '1') THEN(DO)

    RMVLNK OBJLNK(&TO)
    MONMSG MSGID(CPF0000)

    ADDENVVAR ENVVAR(QIBM_QSH_CMD_OUTPUT) VALUE('NONE') LEVEL(*JOB) +
               REPLACE(*YES)
    ADDENVVAR ENVVAR(QIBM_QSH_CMD_ESCAPE_MSG) VALUE(Y) LEVEL(*JOB) +
               REPLACE(*YES)

    SELECT
      WHEN (&MODE = '1') THEN(DO)
        CALLSUBR ENCRYPT
      ENDDO

      WHEN (&MODE *EQ '2') THEN(DO)
        CALLSUBR DECRYPT
      ENDDO

      WHEN (&MODE *EQ '3') THEN(DO)
        CALLSUBR ENCODE64
      ENDDO

      WHEN (&MODE *EQ '4') THEN(DO)
        CALLSUBR DECODE64
      ENDDO

      OTHERWISE (DO)
        CALLSUBR ENCRYPT
      ENDDO

    ENDSELECT

  ENDDO

  IF (&DELETE = '1' *AND &SUCCESS = '1') THEN(DO)
    CALLSUBR DELETE
  ENDDO

  RETURN

/* ------------------ */
  SUBR ENCRYPT

    CHGVAR &CMD VALUE('openssl des3 -salt -in ' *CAT &FROM *TCAT +
                      ' -out ' *CAT &TO *TCAT ' -k ' *CAT &PASSWORD)
    STRQSH CMD(&CMD)
    MONMSG MSGID(CPF0000) EXEC(DO)
      SNDPGMMSG MSGID(CPF9897) MSGF(QCPFMSG) +
                MSGDTA('Error while encryption') MSGTYPE(*ESCAPE)
      CHGVAR &SUCCESS '0'
    ENDDO

  ENDSUBR

/* ------------------ */
  SUBR DECRYPT

    CHGVAR &CMD VALUE('openssl des3 -d -salt -in ' *CAT &FROM *TCAT +
                      ' -out ' *CAT &TO *TCAT ' -k ' *CAT &PASSWORD)
    STRQSH CMD(&CMD)
    MONMSG MSGID(CPF0000) EXEC(DO)
      SNDPGMMSG MSGID(CPF9897) MSGF(QCPFMSG) +
                MSGDTA('Error while decryption') MSGTYPE(*ESCAPE)
      CHGVAR &SUCCESS '0'
    ENDDO

  ENDSUBR

/* ------------------ */
  SUBR ENCODE64

    CHGVAR &CMD  VALUE('openssl base64 -in ' *CAT &FROM *TCAT ' -out ' *CAT &TO)
    STRQSH CMD(&CMD)
    MONMSG MSGID(CPF0000) EXEC(DO)
      SNDPGMMSG MSGID(CPF9897) MSGF(QCPFMSG) +
                MSGDTA('Error occured while encoding') MSGTYPE(*ESCAPE)
      CHGVAR &SUCCESS '0'
    ENDDO

  ENDSUBR

/* ------------------ */
  SUBR DECODE64

    CHGVAR &CMD  VALUE('openssl base64 -d -in ' *CAT &FROM +
                       *TCAT ' -out ' *CAT &TO)
    STRQSH CMD(&CMD)
    MONMSG MSGID(CPF0000) EXEC(DO)
      SNDPGMMSG MSGID(CPF9897) MSGF(QCPFMSG) +
                MSGDTA('Error occured while decoding') MSGTYPE(*ESCAPE)
      CHGVAR &SUCCESS '0'
    ENDDO

  ENDSUBR

/* ------------------ */
  SUBR DELETE

    RMVLNK OBJLNK(&FROM)
    MONMSG MSGID(CPF0000)

  ENDSUBR

ENDPGM
